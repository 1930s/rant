using System;

namespace Manhood
{
    /// <summary>
    /// Contains error information generated by the Manhood interpreter.
    /// </summary>
    public sealed class ManhoodException : Exception
    {
        private readonly int _index;

        internal ManhoodException(string message, int index = 0) : base(message)
        {
            _index = index;
        }

        /// <summary>
        /// The position in the code at which the error occurred.
        /// </summary>
        public int Index
        {
            get { return _index; }
        }

        internal static void Throw(Interpreter i, string message)
        {
            throw new ManhoodException(message);
        }

        internal static void CheckArgs(string tagname, string[] args, int expected)
        {
            if (args.Length != expected) throw new ManhoodException(String.Concat(tagname.ToUpper(), " takes ", expected == 0 ? "no" : expected.ToString(), expected == 1 ? " argument" : " arguments", ", but was supplied ", args.Length, "."));
        }
    }
}